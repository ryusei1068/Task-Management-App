{"version":3,"sources":["components/task.js","components/enterArea.js","components/addButton.js","components/task-section.js","App.js","index.js"],"names":["Task","props","useState","editMode","setEditMode","keyPress","e","which","enableToEnter","upDateTaskName","className","defaultValue","name","onKeyPress","disabled","onMouseOver","editDetail","role","onClick","deleteTask","id","style","color","EnterArea","wrap","onSubmit","handleSubmit","type","autoFocus","placeholder","maxLength","onChange","handleChange","add","text","cancel","AddButton","addClassName","addElement","TaskSection","tasks","setTasks","enable","setEnable","taskName","setTaskName","enterMode","setEnterMode","remainTasks","filter","task","taskList","map","enterTaskName","preventDefault","length","newTask","nanoid","target","value","addTaskBtn","sectionName","deleteSection","App","sections","setSections","setSectionName","setEnableToEnter","remainingSections","section","enterSectionName","newSection","addAnotherListBtn","sectionList","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.12b2e827.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { BsTrash } from 'react-icons/bs'\n\nfunction Task(props) {\n    const [editMode, setEditMode] = useState(true);\n\n    const keyPress = (e) => {\n        if (e.which === 13) {\n            setEditMode(true)\n        }\n    }\n\n    const enableToEnter = () => {\n        setEditMode(false)\n    }\n\n    const upDateTaskName =\n            <TextareaAutosize \n                className=\"task-name\" \n                defaultValue={props.name}\n                onKeyPress={(e) => keyPress(e)} \n                disabled={editMode}\n                onMouseOver={enableToEnter}\n            />\n\n    const editDetail = \n            <TextareaAutosize \n                className=\"task-detail\" \n                defaultValue=\"\"\n                onKeyPress={(e) => keyPress(e)} \n                disabled={editMode}\n                onMouseOver={enableToEnter}\n            />\n        \n    return (\n            <div className=\"toast fade show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n                <div className=\"toast-header\">\n                    {upDateTaskName}\n                    <div className=\"trash-box-icon\" onClick={() => props.deleteTask(props.id)}>\n                        <BsTrash />\n                    </div>\n                </div>\n                <div className=\"toast-body\">\n                    <small style={{color: \"gray\"}}>detail</small>\n                    {editDetail}\n                </div>\n            </div>\n        )\n}\n\n\nexport default Task;\n","import React from \"react\";\nimport { VscClose } from \"react-icons/vsc\";\n\nconst EnterArea = (props) => {\n    return (\n        <div className={`${props.wrap}`}>\n            <form onSubmit={props.handleSubmit}>\n                <input className=\"m-1\" type=\"text\" autoFocus={true} placeholder={props.placeholder} maxLength=\"500\" onChange={props.handleChange} />\n                <div className={props.add}>\n                    <button className=\"btn btn-primary m-1\" type=\"submit\">{props.text}</button>\n                    <button className=\"btn\" onClick={props.cancel}><VscClose/></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n\nexport default EnterArea;\n","import React from \"react\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\n\nconst AddButton = (props) => {\n    return (\n        <button className={`btn ${props.addClassName}`} onClick={props.addElement}>\n            <AiOutlinePlus/> {props.text}\n        </button>\n    )\n}\n\n\nexport default AddButton;\n","import React, { useState } from \"react\";\nimport Task from \"./task\";\nimport EnterArea from \"./enterArea\";\nimport AddButton from \"./addButton\";\nimport { nanoid } from \"nanoid\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { VscClose } from \"react-icons/vsc\"\n\n\nfunction TaskSection(props) {\n    const [tasks, setTasks] = useState([]);\n    const [enable, setEnable] = useState(true);\n    const [taskName, setTaskName] = useState(\"\");\n    const [enterMode, setEnterMode] = useState(false);\n\n\n    const keyPress = (e) => {\n        if (e.which === 13) {\n            setEnable(true)\n        }\n    }\n\n    const enableToEnter = () => {\n        setEnable(false);\n    }\n\n    const cancelAdd = (e) => {\n        e.preventDefault();\n        setEnterMode(false)\n    }\n\n    const addCard = () => {\n        setEnterMode(true);\n    }\n\n    const handleChange = (e) => {\n        setTaskName(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (taskName.length === 0) return ;\n        const newTask = { id: `task-${nanoid()}`, name: taskName};\n        setTasks([...tasks, newTask])\n        setEnterMode(false)\n        setTaskName(\"\");\n    }\n\n    const deleteTask = (id) => {\n        const remainTasks = tasks.filter(task => id !== task.id);\n        setTasks(remainTasks)\n    }\n\n    const taskList = tasks\n    .map(task => (\n        <Task\n            id={task.id}\n            key={task.id}\n            name={task.name}\n            deleteTask={deleteTask}\n        />\n    ))\n\n\n    const enterTaskName = \n            <EnterArea \n                handleSubmit={handleSubmit}\n                wrap=\"enter-task-name m-3\"\n                handleChange={handleChange}\n                text=\"Add Task\"\n                placeholder=\"Enter task name...\"\n                cancel={cancelAdd}\n            />\n\n    const addTaskBtn = \n            <AddButton \n                addElement={addCard}\n                text=\"Add a Card\"\n            />\n\n    const sectionName =\n            <div \n                className=\"pt-3 sectionName-wrap\" \n                onMouseOver={enableToEnter}>\n                    <TextareaAutosize \n                        className=\"section-title w-100\" \n                        defaultValue={props.name} \n                        onKeyPress={(e) => keyPress(e)} \n                        disabled={enable}\n                    />\n                <div \n                    className=\"trash-box-icon\" \n                    onClick={() => props.deleteSection(props.id)}>\n                        <VscClose/>\n                </div>\n            </div>\n\n    return  (\n            <div className=\"vh-100\">\n                <div className=\"mx-2 list-wrapper\">\n                    <div className=\"mx-3\">\n                        {sectionName}\n                    </div>\n                    <div className=\"task-cards\">\n                        {taskList}\n                    </div>\n                        {!enterMode ? addTaskBtn : enterTaskName}\n                </div>\n            </div>\n        )\n}\n\nexport default TaskSection;\n","import React, { useState } from \"react\";\nimport TaskSection from \"./components/task-section\";\nimport EnterArea from \"./components/enterArea\";\nimport AddButton from \"./components/addButton\";\nimport { nanoid } from \"nanoid\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\"\n\nfunction App(props) {\n    const [sections, setSections] = useState(props.sections);\n    const [sectionName, setSectionName] = useState(\"\");\n    const [enableToEnter, setEnableToEnter] = useState(false);\n\n    const addSection = () => {\n        setEnableToEnter(true);\n    }\n\n    const cancelAdd = (e) => {\n        e.preventDefault()\n        setEnableToEnter(false)\n    }\n\n    const handleChange = (e) => {\n        setSectionName(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (sectionName.length === 0) return ;\n        const newSection = { id: `section-${nanoid()}`, name: sectionName };\n        setSections([...sections, newSection])\n        setEnableToEnter(false)\n        setSectionName(\"\")\n    }\n\n    const deleteSection = (id) => {\n        const remainingSections = sections.filter(section => (id !== section.id));\n        setSections(remainingSections);\n    }\n\n    const enterSectionName = \n            <EnterArea \n                handleSubmit={handleSubmit}\n                wrap=\"enter-section-name-wrap\"\n                handleChange={handleChange}\n                text=\"Add List\"\n                placeholder=\"Enter list title...\"\n                cancel={cancelAdd}\n            />\n\n    const addAnotherListBtn = \n            <AddButton \n                addElement={addSection}\n                text=\"Add another list\"\n                addClassName=\"add-list\"    \n            />\n\n    const sectionList = sections\n    .map(section => (\n        <TaskSection\n            id={section.id}\n            key={section.id}\n            name={section.name}\n            deleteSection={deleteSection}\n            className=\"section\"\n        />\n    ))\n\n    return (\n            <div className=\"board-wrapper\">\n                <div className=\"board-canvas\">\n                    {sectionList}\n                    <div className=\"mx-1\">\n                        {enableToEnter ? enterSectionName : addAnotherListBtn}\n                    </div>\n                </div>\n            </div>\n        )\n}\n\nexport default App;\n","import React from \"react\";\nimport reactDom from \"react-dom\";\nimport App from \"./App\"\n\nconst sections = [];\n\nreactDom.render(\n    <App  sections={sections}/>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}